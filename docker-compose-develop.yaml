version: '3.8'

services:
  db:
    container_name: db
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: chat_system
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root --password=password"]
      interval: 10s
      timeout: 10s
      retries: 10

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 10

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cat/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 10

  web:
    container_name: web
    build:
      context: .
      args:
        SECRET_KEY_BASE: 1234567890
    volumes:
      - .:/myapp
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      DATABASE_HOST: db
      DATABASE_NAME: chat_system
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY_BASE: 1234567890
    command: >
      /bin/sh -c "bundle exec rails db:create && bundle exec rails db:migrate && bundle exec rake redis_counts:update && bundle exec rails server -b 0.0.0.0"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:3000/api-docs || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 10

  sidekiq:
    container_name: sidekiq
    build:
      context: .
      args:
        SECRET_KEY_BASE: 1234567890
    command: >
      /bin/sh -c "bundle exec sidekiq"
    volumes:
      - .:/myapp
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      web:
        condition: service_healthy
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      DATABASE_HOST: db
      DATABASE_NAME: chat_system
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY_BASE: 1234567890